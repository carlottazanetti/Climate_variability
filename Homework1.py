# -*- coding: utf-8 -*-
"""Homework1CarlottaZanetti.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NZh3mh6b6zKzpKKmnMZJacKenIQijSzy

# IMPORT MODULES AND MOUNT GOOGLE DRIVE
"""

import os
import xarray as xr
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.dates import DateFormatter

from google.colab import drive
drivedir = '/content/drive'
drive.mount(drivedir)
os.chdir(drivedir)

"""# PART A: load, plot and time resampling

## 1.Load datasets
"""

datadir = drivedir + '/MyDrive/UNI_UNIBO/Climate_Variability/DATA/'
outdir = drivedir + '/MyDrive/UNI_UNIBO/Climate_Variability/OUTPUT/'

hmean_ERA5 = xr.open_dataset(datadir + 'ERA5_t2m_hourly_Bologna_1952-2022_rd.nc')
dmean_ECA = xr.open_dataset(datadir + 'teca169.nc')

"""## 2.Basic time series plot"""

y1 = hmean_ERA5.t2m.sel(time=slice('2013-01-01', '2013-12-31'))[:,0,0]-273.15
x1 = hmean_ERA5.time.sel(time=slice('2013-01-01', '2013-12-31'))
y2 = dmean_ECA.tg.sel(time=slice('2013-01-01', '2013-12-31'))
x2 = dmean_ECA.time.sel(time=slice('2013-01-01', '2013-12-31'))

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(22,7))
ax.plot(x1, y1,'r', label='ERA5 hourly mean')
ax.plot(x2, y2, 'b', label='ECA daily mean')

ax.set(xlabel="Date", ylabel="Temperature [°C]", title="Temperature in 2013",
       ylim=[-7,38])
ax.grid()
plt.legend()
date_form = DateFormatter("%y-%m-%d")
ax.xaxis.set_major_formatter(date_form)

"""## 3.Daily mean from hourly mean with xarray"""

dmean_ERA5 = hmean_ERA5.resample(time="1D").mean('time')

y1 = dmean_ERA5.t2m.sel(time=slice('2000-01-01', '2010-12-31'))[:,0,0]-273.15
x1 = dmean_ERA5.time.sel(time=slice('2000-01-01', '2010-12-31'))
y2 = dmean_ECA.tg.sel(time=slice('2000-01-01', '2010-12-31'))
x2 = dmean_ECA.time.sel(time=slice('2000-01-01', '2010-12-31'))

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1,figsize=(20,12))
ax.plot(x1,y1,'r', label= 'ERA5')
ax.plot(x2, y2, 'b', label='ECA')

ax.set(xlabel="Year", ylabel="Temperature [°C]", title="Daily mean 2000-2010",
       ylim=[-10,38])
ax.grid()
plt.legend()
date_form = DateFormatter("%Y")
ax.xaxis.set_major_formatter(date_form)

"""## 4.Monthly mean climatology and anomalies"""

mmean_ERA5 = hmean_ERA5.resample(time="1M").mean('time')

y = mmean_ERA5.t2m.sel(time=slice('1952-01-01', '2022-12-31'))[:,0,0]-273.15
x = mmean_ERA5.time.sel(time=slice('1952-01-01', '2022-12-31'))

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1,figsize=(20,12))
ax.plot(x,y,'r')

ax.set(xlabel="Year", ylabel="Temperature [°C]",
       title="ERA5 monthly mean 1952-2022", ylim=[-7,30])
ax.grid()
date_form = DateFormatter("%Y")
ax.xaxis.set_major_formatter(date_form)

m_mean_climatology = np.empty(12)

for i in range(0,12):
  m_mean_climatology[i] = mmean_ERA5.t2m[i::12].mean()

m_mean_climatology -= 273.15

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(20,12))
ax.plot(m_mean_climatology,'r')

ax.set(xlabel="Month", ylabel="Temperature [°C]",
       title="Monthly mean climatology", xticks=(0,1,2,3,4,5,6,7,8,9,10,11),
       xticklabels=['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug',
                    'sept', 'oct', 'nov', 'dec'])
ax.grid()

x = mmean_ERA5.time.sel(time=slice('1952-01-01', '2022-12-31'))
m_mean_anomaly = np.empty(len(mmean_ERA5.time))

for i in range(len(m_mean_anomaly)):
  m_mean_anomaly[i] = mmean_ERA5.t2m[i] - mmean_ERA5.t2m[i::12].mean()

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(20,12))
ax.plot(x, m_mean_anomaly,'r')

ax.set(xlabel="Year", ylabel="Temperature [°C]", title="Monthly mean anomaly")
ax.grid()
date_form = DateFormatter("%Y")
ax.xaxis.set_major_formatter(date_form)

"""OBSERVATIONS: It is possible to notice high frequency oscillations due to the seasonal cycle. Also, there are negative monthly mean anomalies from 1952 to around 1977, followed by an abrupt shift towards more positive values. Finally, from around 1990, the anomalies tend to be centered around 0.

# PART B:Gridded product vs station’s measurements

## 5. ERA5 Error
"""

y1 = dmean_ERA5.t2m.sel(time=slice('1952-01-01', '2018-12-31'))[:,0,0]-273.15
x = dmean_ERA5.time.sel(time=slice('1952-01-01', '2018-12-31'))
y2 = dmean_ECA.tg.sel(time=slice('1952-01-01', '2018-12-31'))
y_diff= y1-y2

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(30,12))
ax.plot(x, y_diff, 'g')

ax.set(title= 'ERA5 error', xlabel="Year", ylabel="Temperature [°C]")
ax.grid()

plt.show()

"""OBSERVATIONS: it's clear that the differnece (the error) is not constant troughout the years. In fact, the error drastically decreases from the year 2006 (except for a peak around 2015-2016), meaning that in those years the ECA and ERA5 datasets have fewer differences. Also, it seems to be a correlation with the positive shift of the monthly mean anomaly  in 1977-1990.
In general, it's possible to see the seasonal cycle, meaning that winter measurements are more prone to having differences in the two datasets than summer ones.
"""

ERA_ERROR=np.abs(y_diff)
y = ERA_ERROR.groupby('time.month').mean()

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(30,12))
ax.plot(y,'r',)

ax.set(xlabel="Month", ylabel="STD [°C]",
       title="Monthly average error",
       xticks=(0,1,2,3,4,5,6,7,8,9,10,11),
       xticklabels=['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug',
                    'sept', 'oct', 'nov', 'dec'])
plt.show()

"""OBSERVATIONS: we can confirm what it has been noted in the previous graph:the anomaly is bigger in winter and decreases until it reaches a minimum in summer (july). Hence, we can conclude that the error depends on the season.

## 6. ERA5 vs ECA PDF
"""

bins = np.arange(-10, 44, 2)

y1 = dmean_ERA5.t2m.sel(time=slice('1952-01-01', '2000-12-31'))[:,0,0]-273.15
hist1, bin_edges = np.histogram(y1, bins, density=True)

y2 = dmean_ECA.tg.sel(time=slice('1952-01-01', '2000-12-31'))
hist2, bin_edges = np.histogram(y2, bins, density=True)

y3 = dmean_ECA.tg.sel(time=slice('1952-01-01', '1972-12-31'))
hist3, bin_edges = np.histogram(y3, bins, density=True)

y4 =dmean_ECA.tg.sel(time=slice('1992-01-01', '2012-12-31'))
hist4, bin_edges = np.histogram(y4, bins, density=True)

bin_center = (bin_edges[0:-1]+bin_edges[1:])/2

fig, ax = plt.subplots(nrows=1, ncols=2, sharey=True, figsize=(20,12),
                       constrained_layout=True)
ax[0].plot(bin_center, hist1,'r', label='ERA5')
ax[0].plot(bin_center, hist2,'b', label='ECA')
ax[1].plot(bin_center, hist3,'g', label='1952-1972')
ax[1].plot(bin_center, hist4,'m', label='1992-2012')

ax[0].grid()
ax[0].legend()
ax[0].set_title("PDF daily mean temperature [°C] 1952-2000")
ax[1].grid()
ax[1].legend()
ax[1].set_title("ECA PDF daily mean temperature [°C]")

plt.show()

"""OBSERVATIONS (graph on the left): in both ECA and ERA datasets two peaks are visible (around -5°C and 23°C). Those indicate the most frequent temperatures in the years 1952-2000, coinciding with the typical winter and summer average temperatures. The two datasets differ in the winter peak, with the ERA maximum being at a slightly higher temperature, and so overrestimating it, and in general having a higher curve for the values between the two peaks.

# PART C: timescale and Variability Strength

## 7. Time scale and variability strength
"""

names = ('6h', '12h', '1d', '7d', '1m', '3m', '1y', '5y', '10y')
STD_tscale = np.empty(10)
STD_tscale[0]=np.nanstd(hmean_ERA5.t2m[:,0,0])

for k in range(len(names)):
  resample=hmean_ERA5.t2m[:,0,0].resample(time=names[k]).mean('time')
  STD_tscale[k+1] = np.nanstd(resample)

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(20,12))
ax.plot(STD_tscale,'-o')

ax.set(xlabel="Timescale", ylabel="STD [°C]",
       title="Time scale dependency of Variability",
       xticks=(0,1,2,3,4,5,6,7,8,9),
       xticklabels=['1h', '6h', '12h', '1 day', '1 week', '1 month', '3 months',
                    '1 year', '5 years', '10 years'])
ax.grid()

"""OBSERVATIONS: We can see that the curve decays and so the STD depends on the timescale. Also, there is an abrupt decrease from 3 months to 1 year because the seasonal cycle is no longer visible."""

j = 0
hr = (1, 6, 12, 24, 24*7, 24*30, 24*90, 24*365, 24*365*5, 24*365*10)

N = len(hmean_ERA5.time)
y_rnd = np.random.normal(0, STD_tscale[0], N)
STD_tscale_mean_rnd = np.empty((len(hr)))

for nhr in hr:
  y_rnd_rs = y_rnd[:(N//nhr)*nhr].reshape(-1, nhr)
  yavg_rnd = np.average(y_rnd_rs, axis=1)
  STD_tscale_mean_rnd[j] = np.nanstd(yavg_rnd)
  j += 1

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(20,12))
ax.plot(STD_tscale,'-o', label= '$\sigma_{ERA5}$')
ax.plot(STD_tscale_mean_rnd,'-o',
        label='$\sigma$ for N-hours-averaged random time series')

ax.set(xlabel="timescale", ylabel="STD [°C]",
       title="Time scale dependency of Variability",
       xticks=(0,1,2,3,4,5,6,7,8,9),
       xticklabels=['1h', '6h', '12h', '1 day', '1 week', '1 month', '3 months',
                    '1 year', '5 years', '10 years'])
ax.grid()
ax.legend(loc='upper right', fontsize=20)

plt.show()

"""OBSERVATIONS: the two curves don't coincide. This is an indicator that the timeseries is not random and so the climate doesn't depend solely on the weather, although it has a random component (in fact it decays like the random curve)

"""

STD_sigma_overN = STD_tscale[0]/np.sqrt(hr)

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(20,12))
ax.plot(STD_tscale,'-o', label= '$\sigma_{ERA5}$')
ax.plot(STD_tscale_mean_rnd,'-o',
        label='$\sigma$ for N-hours-averaged random time series')
ax.plot(STD_sigma_overN,'g--x', label='$\sigma_{ERA5}$/$\sqrt{N}$' )

ax.set(xlabel="timescale", ylabel="STD [°C]",
       title="Time scale dependency of Variability",
       xticks=(0,1,2,3,4,5,6,7,8,9),
       xticklabels=['1h', '6h', '12h', '1 day', '1 week', '1 month', '3 months',
                    '1 year', '5 years', '10 years'])
ax.grid()
ax.legend(loc='upper right', fontsize=18)

plt.show()

"""## OPTIONAL EXERSICE"""

STD_tscale_rolling = np.empty(10)

for k in range(len(STD_tscale)):
  r_mean = hmean_ERA5.t2m[:,0,0].rolling(time=hr[k]).mean()
  STD_tscale_rolling[k] = np.nanstd(r_mean)

STD_sigma_overN_r = STD_tscale_rolling[0]/np.sqrt(hr)

plt.rcParams.update({'font.size': 24})

fig, ax = plt.subplots(nrows=1, ncols=1, figsize=(20,12))
ax.plot(STD_tscale_rolling,'-o',
        label= '$\sigma_{ERA5}$ averaged with running mean')
ax.plot(STD_tscale,'-o',
        label= '$\sigma_{ERA5}$')
ax.plot(STD_tscale_mean_rnd,'-o',
        label='STD for N-hours-averaged random time series')
ax.plot(STD_sigma_overN_r,'g--x', label='$\sigma_{ERA5}$/$\sqrt{N}$')

ax.set(xlabel="timescale", ylabel="STD [°C]",
       title="Time scale dependency of Variability",
       xticks=(0,1,2,3,4,5,6,7,8,9),
       xticklabels=['1h', '6h', '12h', '1 day', '1 week', '1 month', '3 months',
                    '1 year', '5 years', '10 years'])
ax.grid()
ax.legend(loc='upper right', fontsize="18")

plt.show()

