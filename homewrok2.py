# -*- coding: utf-8 -*-
"""Homewrok2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16vgh2hirc7KavWVhh8qHARmI7Ln0Tj9_

# Importing modules and mounting google drive
"""

import os, sys
from google.colab import drive
drivedir = '/content/drive'
drive.mount(drivedir)
os.chdir(drivedir)

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !apt-get install -qq libgdal-dev libproj-dev
# !pip install --no-binary shapely shapely --force
# !pip install cartopy

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from matplotlib.dates import DateFormatter
import xarray as xr
import pandas as pd
import cartopy
import cartopy.crs as ccrs

"""# PART A: Lorenz Attractor

## Attractor
"""

def lorenz(xyz, *, s=10, r=28, b=2.667):
    x, y, z = xyz
    x_dot = s*(y - x)
    y_dot = r*x - y - x*z
    z_dot = x*y - b*z
    return np.array([x_dot, y_dot, z_dot])

dt = 0.01
num_steps = 10000
perturb = 2E-1

xyzs = np.empty((num_steps + 1, 3))
xyzs2 = np.empty((num_steps + 1, 3))
xyzs[0] = (10, 10, 10)
xyzs2[0] = (10+perturb, 10, 10)

for i in range(num_steps):
    xyzs[i + 1] = xyzs[i] + lorenz(xyzs[i]) * dt
    xyzs2[i + 1] = xyzs2[i] + lorenz(xyzs2[i]) * dt

fig, ax = plt.subplots(nrows=3, ncols=1, sharey=True, figsize=(30,18),
                       constrained_layout=True)

ax[0].plot(xyzs[:,0], lw=2 )
ax[0].set_xlabel("X Axis")
ax[0].set_title("Lorenz Attractor: x-coordinate")
ax[0].legend(['IC'])
ax[0].grid()

ax[1].plot(xyzs[:,1], lw=2)
ax[1].set_xlabel("Y Axis")
ax[1].set_title("Lorenz Attractor: y-coordinate")
ax[1].legend(['IC'])
ax[1].grid()

ax[2].plot(xyzs[:,2], lw=2)
ax[2].set_xlabel("Z Axis")
ax[2].set_title("Lorenz Attractor: z-coordinate")
ax[2].legend(['IC'])
ax[2].grid()

plt.show()

fig, ax = plt.subplots(nrows=3, ncols=1, sharey=True, figsize=(30,18),
                       constrained_layout=True)

ax[0].plot(xyzs[:4000,0], lw=2)
ax[0].plot(xyzs2[:4000,0], lw=2)
ax[0].set_xlabel("X Axis")
ax[0].set_title("Lorenz Attractor: x-coordinate")
ax[0].legend(['IC', 'IC+perturb.'])
ax[0].grid()

ax[1].plot(xyzs[:4000,1], lw=2)
ax[1].plot(xyzs2[:4000,1], lw=2)
ax[1].set_xlabel("Y Axis")
ax[1].set_title("Lorenz Attractor: y-coordinate")
ax[1].legend(['IC', 'IC+perturb.'])
ax[1].grid()

ax[2].plot(xyzs[:,2], lw=2)
ax[2].plot(xyzs2[:,2], lw=2)
ax[2].set_xlabel("Z Axis")
ax[2].set_title("Lorenz Attractor: z-coordinate")
ax[2].legend(['IC', 'IC+perturb.'])
ax[2].grid()

plt.show()

"""OBSERVATIONS: the original solution and the perturbed solution are the same until about t=400, then they start to be slightly off phase. After t=4000 the two solution are complete opposites. It's clear that a slight change in the initial conditions (a perturbation) makes the two solutions grow apart exponentially, as it should happen in a Lorentz deteministic system.

## Phase Space
"""

ax = plt.figure(figsize=(5,5)).add_subplot(projection='3d')
ax.plot(*xyzs.T, lw=0.5)
ax.set_xlabel("X Axis")
ax.set_ylabel("Y Axis")
ax.set_zlabel("Z Axis")
ax.set_title("Lorenz Attractor")

plt.show()

ax = plt.figure(figsize=(5,5)).add_subplot(projection='3d')

ax.plot(*xyzs.T, lw=0.5)
ax.plot(*xyzs2.T, lw=0.5)
ax.set_xlabel("X Axis")
ax.set_ylabel("Y Axis")
ax.set_zlabel("Z Axis")
ax.set_title("Lorenz Attractor")
ax.legend(['IC', 'IC+perturb.'])

plt.show()

"""OBSERVATIONS: Both the initial solution and the perturbed one are unstable attractors, meaning that the solution stays in the two planes and spirals into the two centers but never actually goes there. Thus, the two solutions are similar but with a closer look one can notice that they never share the same points."""

ax = plt.figure(figsize=(5,5)).add_subplot()
ax.plot(xyzs[:,0], xyzs[:,2], lw=0.5)
ax.set_xlabel("X Axis")
ax.set_ylabel("Z Axis")
ax.set_title("Lorenz Attractor")

plt.show()

ax = plt.figure(figsize=(5,5)).add_subplot()

ax.plot(xyzs[:,0], xyzs[:,2], lw=0.5)
ax.plot(xyzs2[:,0], xyzs2[:,2], lw=0.5)
ax.set_xlabel("X Axis")
ax.set_ylabel("Z Axis")
ax.set_title("Lorenz Attractor")
ax.legend(['IC', 'IC+perturb.'])

plt.show()

"""OBSERVATIONS: here it's clearly visible that the solution is more present on the right spiral (the attractor with positive values on the x axis).

## Joint PDF

### a) Probability Density Function (PDF) for X and Z
"""

y1 = xyzs[:,0]
histx, bin_edgesx = np.histogram(y1, np.arange(-25, 25), density=True)
bin_centerx = (bin_edgesx[0:-1]+bin_edgesx[1:])/2

y2 = xyzs[:,2]
histz, bin_edgesz = np.histogram(y2, np.arange(0,55), density=True)
bin_centerz = (bin_edgesz[0:-1]+bin_edgesz[1:])/2

fig, ax = plt.subplots(nrows=1, ncols=2,figsize=(20,12))
ax[0].plot(bin_centerx,histx,'b')
ax[0].set_title('PDF for X')
ax[0].grid()
ax[1].plot(bin_centerz,histz,'b')
ax[1].set_title('PDF for Z')
ax[1].grid()

"""OBSERVATIONS: in the probability density function of the x axis it is noticeable how the peak is not centered, but rather shifted on the right. This confirms, and highlights what was already visible in the 2D phase diagram.
The PDF of the z axis is quite symmetric, with the symmetry axis being around z=27 (where the two centers are).

### b) Joint PDF of XZ
"""

def bs_sample_pdf_2d(x, z, nBins =60):
  #Prepare X
  mmin = np.min(x[:])
  mmax = np.max(x[:])
  dX = (mmax-mmin)/nBins
  Xmedian = np.mean(x)
  Xplus = np.arange(Xmedian,mmax+dX,dX)
  Xminus = np.arange(Xmedian,mmin-dX,-dX)
  Xminus =Xminus[-1:0:-1]
  X=np.concatenate((Xminus,Xplus),axis=0)
  #Prepare Z
  mmin = np.min(z[:])
  mmax = np.max(z[:])
  dZ = (mmax-mmin)/nBins
  Zmedian = np.mean(z)
  Zplus = np.arange(Zmedian,mmax+dZ,dZ)
  Zminus = np.arange(Zmedian,mmin-dZ,-dZ)
  Zminus = Zminus[-1:0:-1]
  Z = np.concatenate((Zminus,Zplus),axis=0)

  [XX,ZZ] = np.meshgrid(X,Z)
  I,J = XX.shape
  jpdf = np.zeros((I,J))

  for i in range(I):
    for j in range(J):
      jpdf[i,j] = np.sum(np.logical_and(x >= XX[i,j]-dX/2, x < XX[i,j]+dX/2 )*
                         np.logical_and(z >= ZZ[i,j]-dZ/2, z < ZZ[i,j]+dZ/2 ))

  Pxz = jpdf/np.sum(jpdf[:]*dX*dZ)

  return Pxz, XX, ZZ

x = xyzs[:,0]
z = xyzs[:,2]
Pxz, XX, ZZ = bs_sample_pdf_2d(x, z)
levs = np.arange(0,0.025,0.001)
plt.contourf(XX,ZZ, Pxz,levs,cmap=plt.cm.jet)
plt.colorbar()
plt.show()

"""OBSERVATIONS: here we can see that the probability is higher in the right center, which confirms previous observations. The solution spirals and gets extremely close to the center of the right attarctor. This probably happens because the time interval taken into consideration is too small. In fact, if a larger time interval is taken, then the probability is equally high in the two centers.

### c) Joint PDF XZ conditional on âˆ’1<Y <1 and 8<Y <10
"""

Ymin,Ymax = -1,1
cond = [(xyzs[:,1] >=Ymin)*(xyzs[:,1] <= Ymax)]

x = xyzs[cond][:,0]
z = xyzs[cond][:,2]
Pxy, XX, YY = bs_sample_pdf_2d(x, z)
levs = np.arange(0,0.02,0.0001)
plt.contourf(XX,YY,Pxy,levs,cmap=plt.cm.jet)
plt.colorbar()
plt.show()

"""OBSERVATIONS: from the phase space diagram it seems like the two centers of the attractors are at around y=10. The joint PDF confirms this: in this case we are at -1<y<1, so away from the centers, and in fact the solution is likely to be found on the two red lines that represent the section of the two planes.
So the solution is evenly distributed on the two planes, meaning we are away from the centers (otherwise we would see a higher probability in the two points corresponding to the two centers).

"""

Ymin,Ymax = 8, 10
cond = [(xyzs[:,1] >=Ymin)*(xyzs[:,1] <= Ymax)]

x = xyzs[cond][:,0]
z = xyzs[cond][:,2]
Pxy, XX, YY = bs_sample_pdf_2d(x, z)
levs = np.arange(0,0.02,0.0001)
plt.contourf(XX,YY,Pxy,levs,cmap=plt.cm.jet)
plt.colorbar()
plt.show()

"""OBSERVATIONS: here, at 8<y<10, we are close to the center, and in fact we can see that the probability is higher in the middle of the right plane, which corresponds to the center of the attractor.

# PART B: Chaos in the Climate Simulations

## The Community Earth System Model (CESM) Large Ensemble
"""

datadir = drivedir + '/MyDrive/UNI_UNIBO/Climate_Variability/Homework_2'
ds = xr.open_mfdataset(datadir+'/cesm_ts_R*_1920-1930.nc',combine='nested',
                     concat_dim='ens',decode_times=False)
t = pd.date_range('1920-01-01','1930-12-01', freq='MS')
ds['time'] = t

N = 12*10+1
P_lonlat = {'the North East Pacific': [-145,50],
          'the Subtropical North East Pacific': [-145,15],
          'the North Atlantic': [-110,50], 'the Mediterranean Sea': [18,35],
          'Siberia':[110,50]}
fig, axs = plt.subplots(nrows=5, ncols=1, sharex=True, figsize=(20,17),
                        constrained_layout = True)
j = 0

for reg in P_lonlat.keys():
  ds_point = ds.sel(lon=P_lonlat[reg][0], lat=P_lonlat[reg][1], method='nearest')

  axs[j].plot(ds_point.time[:N], ds_point.ts[:,:N].T,color='grey')
  axs[j].plot(ds_point.time[:N], ds_point.ts.mean(axis=0)[:N],color='black',
                label='ensemble mean')
  axs[j].set(xlabel="time",
       ylabel="Temperature [K]",
       title="Monthly mean surface tmperature for a point located in "+ reg)
  axs[j].legend()
  axs[j].grid()
  j += 1

"""OBSERVATIONS: it seems like there is a higher spread in the winter season. This could be an indicator that predictions have a higher level of uncertainty in winter. Moreover, in the points located over land, the ensembles diverge right away, whereas in the points located over the ocean (or the sea), the ensembles initially have a very low spread, and they they diverge after some time. This is due to the large thermal inertia of the ocean, that causes the divergence to show up after some time.

## Internal variability in the climate system
"""

fig, axs = plt.subplots(nrows=5, ncols=2, sharex=True, figsize=(20,12),
                        constrained_layout = True)

j = 0
stdev = np.empty(N)
anomaly = np.empty(shape=(30,N))

for reg in P_lonlat.keys():
  ds_point = ds.sel(lon=P_lonlat[reg][0], lat=P_lonlat[reg][1], method='nearest')
  for i in range(0,N):
    anomaly[:,i] = ds_point.ts[:,i] - ds_point.ts[:,i::12].mean()
    stdev[i] = np.nanstd(ds_point.ts[:,i])

  axs[j,0].plot(ds_point.time[:N], anomaly[:,:N].T,color='grey')
  axs[j,0].plot(ds_point.time[:N], anomaly.mean(axis=0)[:N],color='black',
                label='ensemble mean')
  axs[j,0].set(xlabel="time",
       ylabel="Temperature [K]",
       title="Monthly mean anomaly for a point located in "+ reg)
  axs[j,0].legend()
  axs[j,0].grid()

  axs[j,1].plot(ds_point.time[:N],stdev[:N],color='black')
  axs[j,1].grid()
  axs[j,1].set(xlabel="time",
       ylabel="Temperature [K]",
       title="STD")
  j += 1

"""OBSERVATIONS: the spread and the STD confirm that the points located over land diverge right away, and in general there is a higher spread in winter, whereas for the points located over the ocean the spread is generally lower, and it increases with time"""

fig, ax = plt.subplots(nrows=3, ncols=1, figsize=(15,18))
ctrl_lon = -180

stdev = ds.std(dim='ens')

ax1 = plt.subplot(3, 1, 1, projection=ccrs.PlateCarree(central_longitude=ctrl_lon))
ax1.coastlines()
SPREAD_min = stdev.ts.sel(time='1920-01-01')
SPREAD_min.plot.pcolormesh(ax=ax1, vmin=0, vmax=4, cmap='coolwarm')
ax1.gridlines(crs=ccrs.PlateCarree(central_longitude=ctrl_lon), draw_labels=True,
                  linewidth=2, color='gray', alpha=0.5, linestyle='--')
ax1.set(title='Minimum spread ( year 1920)')

ax2 = plt.subplot(3, 1, 2, projection=ccrs.PlateCarree(central_longitude=ctrl_lon))
ax2.coastlines()
SPREAD_avg = stdev.ts.sel(time=slice('1922-01-01','1930-01-01')).mean(dim='time')
SPREAD_avg.plot.pcolormesh(ax=ax2, vmin=0, vmax=5, cmap='coolwarm')
ax2.gridlines(crs=ccrs.PlateCarree(central_longitude=ctrl_lon), draw_labels=True,
                  linewidth=2, color='gray', alpha=0.5, linestyle='--')
ax2.set(title='Average spread 1922-1930')

ax3 = plt.subplot(3, 1, 3, projection=ccrs.PlateCarree(central_longitude=ctrl_lon))
ax3.coastlines()
SPREAD_ratio = SPREAD_avg/SPREAD_min
SPREAD_ratio.plot.pcolormesh(ax=ax3, vmin=0, cmap='coolwarm')
ax3.gridlines(crs=ccrs.PlateCarree(central_longitude=ctrl_lon), draw_labels=True,
                  linewidth=2, color='gray', alpha=0.5, linestyle='--')
ax3.set(title='Ratio between the average and minimum spread')

"""OBSERVATIONS: in the first two graphs the spread is generally lower over the ocean and higher over land, which confirms what it has previously been said. There are some points that have a particularly high spread in the second graph: the North Pacific, the North Atlantic and points like Siberia, which makes sense because they were the locations that showed higher spread in the previous graph.
As for the third graph, it's visible how the spread is higher over the ocean, meaning that the temperature values over the ocean tend to diverge more with time than those on land. So again, this is an indicator that over the ocean the spread increases with time, whereas over land it stays quite constant with time.
"""